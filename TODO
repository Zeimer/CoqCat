Old:

2. Define slice categories (possibly using records). https://en.wikiversity.org/wiki/Introduction_to_Category_Theory/Categories#Identities_for_Free_Categories
3. Write some simplyfying tactics for Pros, Sgr and Monoids.
4. Make an attempt at a general categorical tactic that could do something useful.
6. Change uniqueness theorems to "unique up to unique isomorphism".
10. Refactor Monads.v: move the Maybe monad to CoqSet.
11. Define concrecete categories and use them for theorems about individual categories.
12. Define monoidal categories.
13. State and prove duality facts.
15. Define the divisibility poset.
18. Define (or try to construct) the product functor.

New:
2. Paste and adjust code from the old to the new development.
3. Maybe move the dual instance right into CatAlternative? If so, rework the proofs to use duality.

Setoid:
1. Adjust isomorphic, uniquely isomorphic and exists to work with setoids.
2. Fix injective, surjective and bijective to work with equiv and fix the proofs of mon_char and epi_char.

Commit : Created the Setoid "branch". Wrote the [cat2] tactic which is better (I think) than the previous [cat]. Added comp_Proper to the definition of Cat so that rewriting works. Pasted code from New/Cat to Setoid/Cat and fixed a lot of it (it was mainly about changing [=] to [==] and [trivial] to [reflexivity]).
